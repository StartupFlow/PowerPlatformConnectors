{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Bloomflow",
    "description": "Bloomflow is the innovation management platform empowering large enterprises to thrive in today’s rapidly changing business landscape.  Leverage this connector to streamline collaboration and enhance productivity through efficient automated workflows.",
    "contact": {
      "name": "Bloomflow",
      "url": "https://www.bloomflow.com/contact-us",
      "email": "hello@bloomflow.com"
    }
  },
  "host": "api.demo.bloomflow.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/public/items/reference_data": {
      "get": {
        "summary": "Get reference data",
        "description": "Get reference data to create an item. Containing all valid values for typology, fundraising_stage, nb_employees and geographic_markets.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:items**",
        "operationId": "PublicAPI-getItemsReference",
        "deprecated": false,
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "description": "typologies",
              "properties": {
                "typologies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "parentTypologyId": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "labels": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "sources": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "types": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "field_id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "fundraising_stage": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Fundraising Stage"
                },
                "nb_employees": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Number of employees"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "tags"
                },
                "geographic_markets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "label_FR": {
                        "type": "string",
                        "description": "label_FR"
                      },
                      "label_EN": {
                        "type": "string",
                        "description": "label_EN"
                      }
                    }
                  },
                  "description": "Geographic markets"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/items": {
      "get": {
        "summary": "List Items",
        "description": "Retrieves a list of items. Result can be filtered by *term*, *tags*, *labels*, *sources* and by *updated date*.\n\nNumber of result returned can be handled by *limit* and *offset* parameters.\n\nResults can be ordered thanks to the *sort* parameter.\n\n###### Scope\nTo use this endpoint ApiKey object must have those scopes:\n**public:items**\n**public:items:\\*** (all typologies) or **public:items:startup,events,typology_id** (specific typologies)\n**Note**\nYou can add the http verb \"get\" in front of the scope to limit access to readonly endpoints.\n**get@public:item**",
        "operationId": "PublicAPI-searchItems",
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "typology",
            "in": "query",
            "description": "[required] The typology to search for. Could be either a string (*e.g. startup*) or a JSON array (*e.g. [\"startup\", \"event\"]*)",
            "type": "string",
            "required": true,
            "x-ms-summary": "Typology",
            "x-ms-dynamic-values": {
              "operationId": "PublicAPI-getItemsReference",
              "value-title": "name",
              "value-path": "id",
              "value-collection": "typologies",
              "parameters": {
                "bloomflow_api_url": {
                  "parameter": "bloomflow_api_url"
                }
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "PublicAPI-getItemsReference",
              "itemValuePath": "id",
              "itemTitlePath": "name",
              "itemsPath": "typologies",
              "parameters": {
                "bloomflow_api_url": {
                  "parameterReference": "bloomflow_api_url"
                }
              }
            }
          },
          {
            "name": "term",
            "in": "query",
            "description": "[optional] Term filter",
            "x-ms-summary": "Term",
            "type": "string",
            "required": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "[optional] Fields to match term with (default: term match on name, tags, pitch and description fields)\n*e.g: [\"website\",\"tags\"]*",
            "x-ms-summary": "Fields",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "[optional] Tag ids filter. Should be a JSON array. Check reference_data endpoint to list available tag ids",
            "x-ms-summary": "Tags",
            "required": false,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "[optional] Labels filter. Should be a JSON array. Check reference_data endpoint to list availabe label ids",
            "x-ms-summary": "Labels",
            "required": false,
            "type": "string"
          },
          {
            "name": "sources",
            "in": "query",
            "description": "[optional] Sources filter. Should be a JSON array. Check reference_data endpoint to list availabe source ids",
            "x-ms-summary": "Sources",
            "required": false,
            "type": "string"
          },
          {
            "name": "updated_at_gt",
            "in": "query",
            "description": "[optional] Minimum date filter",
            "x-ms-summary": "Updated At Greater Than",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "updated_at_lt",
            "in": "query",
            "description": "[optional] Maximum date filter",
            "x-ms-summary": "Updated At Lower Than",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "[optional] The number of items to retrieve. (maximum limit 1000)",
            "x-ms-summary": "Limit",
            "required": false,
            "default": 20,
            "maximum": 1000,
            "type": "number"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "[optional] The offset of the first hit to return",
            "x-ms-summary": "Offset",
            "required": false,
            "default": 0,
            "type": "number"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "[optional] Parameter to sort result",
            "x-ms-summary": "Sort",
            "required": false,
            "default": "relevance",
            "enum": [
              "created_at_desc",
              "created_at_asc",
              "updated_at_desc",
              "updated_at_asc",
              "relevance"
            ],
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "type": "integer",
                  "format": "int32",
                  "description": "total"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "short_description": {
                        "type": "string",
                        "description": "short_description"
                      },
                      "full_description": {
                        "type": "string",
                        "description": "full_description"
                      },
                      "website": {
                        "type": "string",
                        "description": "website"
                      },
                      "startupflow_url": {
                        "type": "string",
                        "description": "startupflow_url"
                      },
                      "logo_url": {
                        "type": "string",
                        "description": "logo_url"
                      },
                      "year_founded": {
                        "type": "string",
                        "description": "year_founded"
                      },
                      "nb_employees": {
                        "type": "string",
                        "description": "nb_employees"
                      },
                      "maturity": {
                        "type": "string",
                        "description": "maturity"
                      },
                      "hq": {
                        "type": "object",
                        "properties": {
                          "hq_city": {
                            "type": "string",
                            "description": "hq_city"
                          },
                          "hq_address": {
                            "type": "string",
                            "description": "hq_address"
                          },
                          "hq_country_id": {
                            "type": "string",
                            "description": "hq_country_id"
                          },
                          "hq_country_label": {
                            "type": "string",
                            "description": "hq_country_label"
                          }
                        },
                        "description": "hq"
                      },
                      "typology_id": {
                        "type": "string",
                        "description": "typology_id"
                      },
                      "folder_id": {
                        "type": "string",
                        "description": "folder_id"
                      },
                      "tags": {
                        "type": "array",
                        "description": "tags",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "id"
                            },
                            "name": {
                              "type": "string",
                              "description": "name"
                            },
                            "parent": {
                              "type": "string",
                              "description": "parent"
                            },
                            "category": {
                              "type": "string",
                              "description": "category"
                            }
                          }
                        }
                      },
                      "labels": {
                        "type": "array",
                        "description": "labels",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "id"
                            },
                            "name": {
                              "type": "string",
                              "description": "name"
                            }
                          }
                        }
                      },
                      "sources": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "categoryId": {
                              "type": "string"
                            },
                            "category": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "workflows": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "current_status": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "date": {
                                  "type": "string"
                                }
                              }
                            },
                            "current_state": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "date": {
                                  "type": "string"
                                }
                              }
                            },
                            "states": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "date": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "status": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "date": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "groups": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "results"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Items"
        ],
        "consumes": [
          "application/json"
        ],
        "summary": "Create Item",
        "description": "Create an item object.\n\n**CAUTION soft UPSERT behavior**: If the item exists (matching existing item with exact name or exact website), it will update empty field of existing item with data.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:items:*** (all typologies) or **public:items:startup,events,typology_id** (specific typologies)\n**Note**\nYou can add the http verb \"get\" in front of the scope to limit access to readonly endpoints.\n**get@public:item:***",
        "operationId": "PublicAPI-addItem",
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "typology_id": {
                  "type": "string",
                  "description": "typology_id"
                },
                "name": {
                  "type": "string",
                  "description": "name"
                },
                "website": {
                  "type": "string",
                  "description": "website"
                },
                "logo_url": {
                  "type": "string",
                  "description": "logo_url"
                },
                "short_description": {
                  "type": "string",
                  "description": "short_description"
                },
                "full_description": {
                  "type": "string",
                  "description": "full_description"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "tags"
                },
                "creation_date": {
                  "type": "string",
                  "description": "creation_date"
                },
                "nb_employees": {
                  "type": "string",
                  "description": "nb_employees"
                },
                "fundraising_stage": {
                  "type": "string",
                  "description": "fundraising_stage"
                },
                "hq_address": {
                  "type": "string",
                  "description": "hq_address"
                },
                "internal_contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "description": "first_name"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last_name"
                      },
                      "email_address": {
                        "type": "string",
                        "description": "email_address"
                      },
                      "type": {
                        "enum": [
                          "referent",
                          "contact"
                        ],
                        "description": "position"
                      }
                    }
                  },
                  "description": "internal contacts"
                },
                "external_contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "description": "first_name"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last_name"
                      },
                      "email_address": {
                        "type": "string",
                        "description": "email_address"
                      },
                      "linkedin_url": {
                        "type": "string",
                        "description": "linkedin_url"
                      },
                      "twitter_url": {
                        "type": "string",
                        "description": "twitter_url"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "phone_number"
                      },
                      "position": {
                        "type": "string",
                        "description": "position"
                      }
                    }
                  },
                  "description": "external contacts"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "links"
                },
                "geographic_markets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "geographic_markets"
                },
                "total_funding_usd": {
                  "type": "string",
                  "description": "total_funding_usd"
                },
                "owner_email": {
                  "type": "string",
                  "description": "owner_email"
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field_id": {
                        "type": "string",
                        "description": "field_id"
                      },
                      "value": {
                        "type": "string",
                        "description": "value"
                      }
                    }
                  },
                  "description": "custom_fields"
                }
              },
              "default": {
                "typology_id": "startup",
                "name": "Microsoft",
                "website": "http://www.microsoft.com",
                "logo_url": "https://assets.startupflow.io/documents/sflow.png",
                "short_description": "Microsoft is a software corporation that develops, manufactures, licenses, supports, and sells a range of software products and services.",
                "full_description": "Microsoft is an American multinational corporation that develops, manufactures, licenses, supports, and sells a range of software products and services.",
                "tags": [
                  "saas",
                  "data",
                  "api"
                ],
                "creation_date": "1975",
                "nb_employees": "200 +",
                "fundraising_stage": "ipo",
                "hq_address": "98052 Redmond",
                "external_contacts": [
                  {
                    "first_name": "Thomas",
                    "last_name": "Girard",
                    "linkedin_url": "https://www.linkedin.com/in/satyanadella",
                    "email_address": "satya.nadella@hotmail.com",
                    "phone_number": "+1-202-555-0130",
                    "position": "Chairman & CEO"
                  }
                ],
                "links": [
                  "https://www.welcometothejungle.co/fr/companies/microsoft"
                ],
                "geographic_markets": [
                  "France",
                  "US",
                  "GB"
                ],
                "total_funding_usd": "1000000",
                "owner_email": "ted.hoover@allicata.com",
                "custom_fields": [
                  {
                    "field_id": "sourcing_partner_field",
                    "value": "Custom field value"
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id"
                },
                "name": {
                  "type": "string",
                  "description": "name"
                },
                "action": {
                  "type": "string",
                  "description": "action"
                },
                "created_at": {
                  "type": "string",
                  "description": "created_at"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/items/{id}": {
      "get": {
        "summary": "Get item by ID",
        "description": "Retrieve a specific item by id.\n\n###### Scope\nTo use this endpoint ApiKey object must have those scopes:\n**public:items**\n**public:items:\\*** (all typologies) or **public:items:startup,events,typology_id** (specific typologies)\n**Note**\nYou can add the http verb \"get\" in front of the scope to limit access to readonly endpoints.\n**get@public:item**",
        "operationId": "PublicAPI-getItem",
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "id",
            "default": "62d943ee03b2e60013022971",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Id of the object",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id"
                },
                "name": {
                  "type": "string",
                  "description": "name"
                },
                "short_description": {
                  "type": "string",
                  "description": "short_description"
                },
                "full_description": {
                  "type": "string",
                  "description": "full_description"
                },
                "website": {
                  "type": "string",
                  "description": "website"
                },
                "startupflow_url": {
                  "type": "string",
                  "description": "startupflow_url"
                },
                "logo_url": {
                  "type": "string",
                  "description": "logo_url"
                },
                "year_founded": {
                  "type": "string",
                  "description": "year_founded"
                },
                "nb_employees": {
                  "type": "string",
                  "description": "nb_employees"
                },
                "maturity": {
                  "type": "string",
                  "description": "maturity"
                },
                "hq": {
                  "type": "object",
                  "properties": {
                    "hq_city": {
                      "type": "string",
                      "description": "hq_city"
                    },
                    "hq_address": {
                      "type": "string",
                      "description": "hq_address"
                    },
                    "hq_country_id": {
                      "type": "string",
                      "description": "hq_country_id"
                    },
                    "hq_country_label": {
                      "type": "string",
                      "description": "hq_country_label"
                    }
                  },
                  "description": "hq"
                },
                "typologyId": {
                  "type": "string",
                  "description": "typologyId"
                },
                "typology_id": {
                  "type": "string",
                  "description": "typology_id"
                },
                "folder_id": {
                  "type": "string",
                  "description": "folder_id"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "parent": {
                        "type": "string",
                        "description": "parent"
                      },
                      "category": {
                        "type": "string",
                        "description": "category"
                      }
                    }
                  },
                  "description": "tags"
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      }
                    }
                  },
                  "description": "labels"
                },
                "business_model": {
                  "type": "string",
                  "description": "business_model"
                },
                "painpoints": {
                  "type": "string",
                  "description": "painpoints"
                },
                "business_opportunity": {
                  "type": "string",
                  "description": "business_opportunity"
                },
                "sustainability": {
                  "type": "string",
                  "description": "sustainability"
                },
                "success_proofs": {
                  "type": "string",
                  "description": "success_proofs"
                },
                "risks": {
                  "type": "string",
                  "description": "risks"
                },
                "key_differentiators": {
                  "type": "string",
                  "description": "key_differentiators"
                },
                "competitors": {
                  "type": "string",
                  "description": "competitors"
                },
                "market_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "market_ids"
                },
                "scoring_value": {
                  "type": "integer",
                  "format": "int32",
                  "description": "scoring_value"
                },
                "scoring_summary": {
                  "type": "string",
                  "description": "scoring_summary"
                },
                "scoring_detail": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "score": {
                          "type": "integer",
                          "format": "int32",
                          "description": "score"
                        },
                        "comment": {
                          "type": "string",
                          "description": "comment"
                        }
                      },
                      "description": "value"
                    },
                    "speed": {
                      "type": "object",
                      "properties": {
                        "score": {
                          "type": "integer",
                          "format": "int32",
                          "description": "score"
                        },
                        "comment": {
                          "type": "string",
                          "description": "comment"
                        }
                      },
                      "description": "speed"
                    },
                    "technology": {
                      "type": "object",
                      "properties": {
                        "score": {
                          "type": "integer",
                          "format": "int32",
                          "description": "score"
                        },
                        "comment": {
                          "type": "string",
                          "description": "comment"
                        }
                      },
                      "description": "technology"
                    },
                    "financial": {
                      "type": "object",
                      "properties": {
                        "score": {
                          "type": "integer",
                          "format": "int32",
                          "description": "score"
                        },
                        "comment": {
                          "type": "string",
                          "description": "comment"
                        }
                      },
                      "description": "financial"
                    },
                    "team": {
                      "type": "object",
                      "properties": {
                        "score": {
                          "type": "integer",
                          "format": "int32",
                          "description": "score"
                        },
                        "comment": {
                          "type": "string",
                          "description": "comment"
                        }
                      },
                      "description": "team"
                    }
                  },
                  "description": "scoring_detail"
                },
                "current_status": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "date": {
                      "type": "string",
                      "description": "date"
                    }
                  },
                  "description": "current_status"
                },
                "current_state": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "date": {
                      "type": "string",
                      "description": "date"
                    }
                  },
                  "description": "current_state"
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "linkedin_url": {
                      "type": "string",
                      "description": "linkedin_url"
                    }
                  },
                  "description": "links"
                },
                "press_urls": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "press_urls"
                },
                "internal_contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "description": "first_name"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last_name"
                      },
                      "email_address": {
                        "type": "string",
                        "description": "email_address"
                      },
                      "type": {
                        "enum": [
                          "referent",
                          "contact"
                        ],
                        "description": "position"
                      }
                    }
                  },
                  "description": "internal contacts"
                },
                "external_contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "description": "first_name"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last_name"
                      },
                      "email_address": {
                        "type": "string",
                        "description": "email_address"
                      },
                      "linkedin_url": {
                        "type": "string",
                        "description": "linkedin_url"
                      },
                      "twitter_url": {
                        "type": "string",
                        "description": "twitter_url"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "phone_number"
                      },
                      "position": {
                        "type": "string",
                        "description": "position"
                      }
                    }
                  },
                  "description": "external contacts"
                },
                "related_items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      }
                    }
                  },
                  "description": "related_items"
                },
                "custom_fields": {
                  "type": "object",
                  "properties": {
                    "sourcing_partner_field": {
                      "type": "string",
                      "description": "sourcing_partner_field"
                    }
                  },
                  "description": "custom_fields"
                },
                "statuses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "date": {
                        "type": "string",
                        "description": "date"
                      }
                    }
                  },
                  "description": "statuses"
                },
                "states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "date": {
                        "type": "string",
                        "description": "date"
                      }
                    }
                  },
                  "description": "states"
                },
                "fundings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "investors": {
                        "type": "string",
                        "description": "investors"
                      },
                      "year": {
                        "type": "string",
                        "description": "year"
                      },
                      "amount": {
                        "type": "string",
                        "description": "amount"
                      },
                      "currency_code": {
                        "type": "string",
                        "description": "currency_code"
                      },
                      "transaction": {
                        "type": "string",
                        "description": "transaction"
                      }
                    }
                  },
                  "description": "fundings"
                },
                "created_at": {
                  "type": "string",
                  "description": "created_at"
                },
                "updated_at": {
                  "type": "string",
                  "description": "updated_at"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Item",
        "description": "Update an item object.\n\n**CAUTION**:\n\n- Will replace all fields of the item with the data provided.\n- Data provided should provide all required fields.\n    \n\n###### Scope\n\nTo use this endpoint ApiKey object must have those scopes:  \n**public:items**  \n**public:items:**\\* (all typologies) or **public:items:startup,events,typology_id** (specific typologies)  \n**Note**  \nYou can add the http verb \"get\" in front of the scope to limit access to readonly endpoints.  \n**get@public:item**",
        "operationId": "PublicAPI-updateItem",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "id",
            "default": "62d943ee03b2e60013022971",
            "in": "path",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Id",
            "description": "Id of the object",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "typologyId": {
                  "type": "string",
                  "description": "typologyId"
                },
                "name": {
                  "type": "string",
                  "description": "name"
                },
                "website": {
                  "type": "string",
                  "description": "website"
                },
                "logo_url": {
                  "type": "string",
                  "description": "logo_url"
                },
                "short_description": {
                  "type": "string",
                  "description": "short_description"
                },
                "full_description": {
                  "type": "string",
                  "description": "full_description"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "tags"
                },
                "creation_date": {
                  "type": "string",
                  "description": "creation_date"
                },
                "nb_employees": {
                  "type": "string",
                  "description": "nb_employees"
                },
                "fundraising_stage": {
                  "type": "string",
                  "description": "fundraising_stage"
                },
                "hq_address": {
                  "type": "string",
                  "description": "hq_address"
                },
                "internal_contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "email": {
                        "type": "string",
                        "description": "email"
                      },
                      "type": {
                        "default": "contact",
                        "type": "string",
                        "description": "type",
                        "enum": [
                          "referent",
                          "contact"
                        ]
                      },
                      "created_at": {
                        "type": "string",
                        "description": "created_at"
                      },
                      "last_connexion_at": {
                        "type": "string",
                        "description": "last_connexion_at"
                      }
                    }
                  },
                  "description": "internal_contacts"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "links"
                },
                "geographic_markets": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "geographic_markets"
                },
                "total_funding_usd": {
                  "type": "string",
                  "description": "total_funding_usd"
                },
                "owner_email": {
                  "type": "string",
                  "description": "owner_email"
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field_id": {
                        "type": "string",
                        "description": "field_id"
                      },
                      "value": {
                        "type": "string",
                        "description": "value"
                      }
                    }
                  },
                  "description": "custom_fields"
                }
              },
              "default": {
                "typologyId": "startup",
                "name": "Microsoft",
                "website": "http://www.microsoft.com",
                "logo_url": "https://assets.startupflow.io/documents/sflow.png",
                "short_description": "Microsoft is a software corporation that develops, manufactures, licenses, supports, and sells a range of software products and services.",
                "full_description": "Microsoft is an American multinational corporation that develops, manufactures, licenses, supports, and sells a range of software products and services.",
                "tags": [
                  "saas",
                  "data",
                  "api"
                ],
                "creation_date": "1975",
                "nb_employees": "200 +",
                "fundraising_stage": "ipo",
                "hq_address": "98052 Redmond",
                "contacts": [
                  {
                    "first_name": "Satya",
                    "last_name": "Nadella",
                    "linkedin": "https://www.linkedin.com/in/satyanadella",
                    "email_address": "satya.nadella@hotmail.com",
                    "phone_number": "+1-202-555-0130",
                    "position": "Chairman & CEO"
                  }
                ],
                "links": [
                  "https://www.welcometothejungle.co/fr/companies/microsoft"
                ],
                "geographic_markets": [
                  "France",
                  "US",
                  "GB"
                ],
                "total_funding_usd": "1000000",
                "owner_email": "ted.hoover@allicata.com",
                "custom_fields": [
                  {
                    "field_id": "sourcing_partner_field",
                    "value": "Custom field value"
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id"
                },
                "name": {
                  "type": "string",
                  "description": "name"
                },
                "short_description": {
                  "type": "string",
                  "description": "short_description"
                },
                "full_description": {
                  "type": "string",
                  "description": "full_description"
                },
                "website": {
                  "type": "string",
                  "description": "website"
                },
                "startupflow_url": {
                  "type": "string",
                  "description": "startupflow_url"
                },
                "logo_url": {
                  "type": "string",
                  "description": "logo_url"
                },
                "year_founded": {
                  "type": "string",
                  "description": "year_founded"
                },
                "nb_employees": {
                  "type": "string",
                  "description": "nb_employees"
                },
                "maturity": {
                  "type": "string",
                  "description": "maturity"
                },
                "hq": {
                  "type": "object",
                  "properties": {},
                  "description": "hq"
                },
                "typologyId": {
                  "type": "string",
                  "description": "typologyId"
                },
                "typology_id": {
                  "type": "string",
                  "description": "typology_id"
                },
                "folder_id": {
                  "type": "string",
                  "description": "folder_id"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "id"
                      },
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "parent": {
                        "type": "string",
                        "description": "parent"
                      },
                      "category": {
                        "type": "string",
                        "description": "category"
                      }
                    }
                  },
                  "description": "tags"
                },
                "labels": {
                  "type": "array",
                  "items": {},
                  "description": "labels"
                },
                "market_ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "market_ids"
                },
                "current_status": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "date": {
                      "type": "string",
                      "description": "date"
                    }
                  },
                  "description": "current_status"
                },
                "current_state": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "date": {
                      "type": "string",
                      "description": "date"
                    }
                  },
                  "description": "current_state"
                },
                "links": {
                  "type": "object",
                  "properties": {},
                  "description": "links"
                },
                "press_urls": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "press_urls"
                },
                "internal_contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "description": "first_name"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last_name"
                      },
                      "email_address": {
                        "type": "string",
                        "description": "email_address"
                      },
                      "type": {
                        "enum": [
                          "referent",
                          "contact"
                        ],
                        "description": "position"
                      }
                    }
                  },
                  "description": "internal contacts"
                },
                "external_contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "description": "first_name"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last_name"
                      },
                      "email_address": {
                        "type": "string",
                        "description": "email_address"
                      },
                      "linkedin_url": {
                        "type": "string",
                        "description": "linkedin_url"
                      },
                      "twitter_url": {
                        "type": "string",
                        "description": "twitter_url"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "phone_number"
                      },
                      "position": {
                        "type": "string",
                        "description": "position"
                      }
                    }
                  },
                  "description": "external contacts"
                },
                "related_items": {
                  "type": "array",
                  "items": {},
                  "description": "related_items"
                },
                "custom_fields": {
                  "type": "object",
                  "properties": {
                    "sourcing_partner_field": {
                      "type": "string",
                      "description": "sourcing_partner_field"
                    }
                  },
                  "description": "custom_fields"
                },
                "statuses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "date": {
                        "type": "string",
                        "description": "date"
                      }
                    }
                  },
                  "description": "statuses"
                },
                "states": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "name"
                      },
                      "date": {
                        "type": "string",
                        "description": "date"
                      }
                    }
                  },
                  "description": "states"
                },
                "fundings": {
                  "type": "array",
                  "items": {},
                  "description": "fundings"
                },
                "created_at": {
                  "type": "string",
                  "description": "created_at"
                },
                "updated_at": {
                  "type": "string",
                  "description": "updated_at"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/items/{id}/documents": {
      "get": {
        "summary": "List Documents",
        "description": "List all documents linked to an item.\n\n###### Scope\nTo use this endpoint ApiKey object must have those scopes:\n**public:items**\n**public:items:\\*** (all typologies) or **public:items:startup,events,typology_id** (specific typologies)\n**Note**\nYou can add the http verb \"get\" in front of the scope to limit access to readonly endpoints.\n**get@public:item**",
        "operationId": "PublicAPI-getItemDocuments",
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "id",
            "default": "62d943ee03b2e60013022971",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Id of the object",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "name"
                  },
                  "url": {
                    "type": "string",
                    "description": "url"
                  },
                  "type": {
                    "type": "string",
                    "description": "type"
                  },
                  "size": {
                    "type": "integer",
                    "format": "int32",
                    "description": "size"
                  },
                  "pinned": {
                    "type": "boolean",
                    "description": "pinned"
                  },
                  "isExternal": {
                    "type": "boolean",
                    "description": "isExternal"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "created_by": {
                    "type": "string",
                    "description": "created_by"
                  },
                  "companyId": {
                    "type": "string",
                    "description": "companyId"
                  },
                  "updated_by": {
                    "type": "string",
                    "description": "updated_by"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "created_at"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "updated_at"
                  },
                  "format": {
                    "type": "string",
                    "description": "format"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Document",
        "description": "Add a document to an item.\n\n###### Scope\nTo use this endpoint ApiKey object must have those scopes:\n**public:items**\n**public:items:\\*** (all typologies) or **public:items:startup,events,typology_id** (specific typologies)\n**Note**\nYou can add the http verb \"get\" in front of the scope to limit access to readonly endpoints.\n**get@public:item**",
        "operationId": "PublicAPI-addItemDocument",
        "consumes": [
          "multipart/form-data",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "id",
            "default": "62d943ee03b2e60013022971",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Id of the object",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "url",
            "x-ms-summary": "Url",
            "x-ms-url-encoding": "single",
            "description": "Url of the external document to upload",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "image",
            "default": "true",
            "x-ms-summary": "Image",
            "description": "Boolean to say if the document provided is an image",
            "in": "formData",
            "type": "boolean",
            "required": false
          },
          {
            "name": "file",
            "x-ms-summary": "File",
            "description": "File to upload",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/public/items/{id}/notes": {
      "get": {
        "summary": "List Notes",
        "description": "List all notes linked to an item.\n\n###### Scope\nTo use this endpoint ApiKey object must have those scopes:\n**public:items**\n**public:items:\\*** (all typologies) or **public:items:startup,events,typology_id** (specific typologies)\n**Note**\nYou can add the http verb \"get\" in front of the scope to limit access to readonly endpoints.\n**get@public:item**",
        "operationId": "PublicAPI-getItemNotes",
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "id",
            "default": "635a707a22dec40013284294",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Id of the object",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "description": "date"
                  },
                  "text": {
                    "type": "string",
                    "description": "text"
                  },
                  "confidential": {
                    "type": "boolean",
                    "description": "confidential"
                  },
                  "userMentions": {
                    "type": "array",
                    "items": {},
                    "description": "userMentions"
                  },
                  "isAutomatic": {
                    "type": "boolean",
                    "description": "isAutomatic"
                  },
                  "typologyId": {
                    "type": "string",
                    "description": "typologyId"
                  },
                  "parentTypologyId": {
                    "type": "string",
                    "description": "parentTypologyId"
                  },
                  "companyId": {
                    "type": "string",
                    "description": "companyId"
                  },
                  "id": {
                    "type": "string",
                    "description": "id"
                  },
                  "created_by": {
                    "type": "string",
                    "description": "created_by"
                  },
                  "updated_by": {
                    "type": "string",
                    "description": "updated_by"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "created_at"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "updated_at"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Note",
        "description": "Create a note linked to an item.\n\n###### Scope\nTo use this endpoint ApiKey object must have those scopes:\n**public:items**\n**public:items:\\*** (all typologies) or **public:items:startup,events,typology_id** (specific typologies)\n**Note**\nYou can add the http verb \"get\" in front of the scope to limit access to readonly endpoints.\n**get@public:item**",
        "operationId": "PublicAPI-addItemNote",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "id",
            "default": "62d943ee03b2e60013022971",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Id of the object",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name"
                },
                "text": {
                  "type": "string",
                  "description": "text"
                },
                "date": {
                  "type": "string",
                  "description": "date"
                }
              },
              "default": {
                "name": "My note",
                "text": "Lorem Ipsum Dolor sit amet",
                "date": "2022-07-18T00:00:00.000Z"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "schema": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "description": "date"
                },
                "text": {
                  "type": "string",
                  "description": "text"
                },
                "confidential": {
                  "type": "boolean",
                  "description": "confidential"
                },
                "userMentions": {
                  "type": "array",
                  "items": {},
                  "description": "userMentions"
                },
                "isAutomatic": {
                  "type": "boolean",
                  "description": "isAutomatic"
                },
                "typologyId": {
                  "type": "string",
                  "description": "typologyId"
                },
                "parentTypologyId": {
                  "type": "string",
                  "description": "parentTypologyId"
                },
                "companyId": {
                  "type": "string",
                  "description": "companyId"
                },
                "id": {
                  "type": "string",
                  "description": "id"
                },
                "created_by": {
                  "type": "string",
                  "description": "created_by"
                },
                "updated_by": {
                  "type": "string",
                  "description": "updated_by"
                },
                "created_at": {
                  "type": "string",
                  "description": "created_at"
                },
                "updated_at": {
                  "type": "string",
                  "description": "updated_at"
                },
                "name": {
                  "type": "string",
                  "description": "name"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/application-forms/{applicationFormId}": {
      "post": {
        "tags": [
          "ApplicationForms"
        ],
        "summary": "Create Application",
        "consumes": [
          "application/json"
        ],
        "description": "Create a new application for the given ApplicationForm. Application will be available in the ATS (Application portal).\nCheck the reference data endpoint to get the list of all fields and value available.\n\n**Note**: The first contact object in the contacts array will be the main contact, he will receive contact emails.\nYou can setup the language of email by setting the **activeLang** attribute of the contact object with the value FR or EN.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:applications**",
        "operationId": "PublicAPI-createApplication",
        "parameters": [
          {
            "name": "applicationFormId",
            "in": "path",
            "x-ms-summary": "Application Form Id",
            "x-ms-url-encoding": "single",
            "description": "[required] ApplicationForm id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "logo": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "website": {
                  "type": "string"
                },
                "pitch": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "year_founded": {
                  "type": "string"
                },
                "hq_city": {
                  "type": "string"
                },
                "hq_countryId": {
                  "type": "string"
                },
                "nb_employees": {
                  "type": "string"
                },
                "maturity": {
                  "type": "string"
                },
                "tagIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                },
                "external_contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "description": "first_name"
                      },
                      "last_name": {
                        "type": "string",
                        "description": "last_name"
                      },
                      "email_address": {
                        "type": "string",
                        "description": "email_address"
                      },
                      "linkedin_url": {
                        "type": "string",
                        "description": "linkedin_url"
                      },
                      "twitter_url": {
                        "type": "string",
                        "description": "twitter_url"
                      },
                      "phone_number": {
                        "type": "string",
                        "description": "phone_number"
                      },
                      "position": {
                        "type": "string",
                        "description": "position"
                      }
                    }
                  },
                  "description": "external contacts"
                },
                "documents": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "video_urls": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "press": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "business_model": {
                  "type": "string"
                },
                "marketIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "competitors": {
                  "type": "string"
                },
                "note_collaboration": {
                  "type": "string"
                },
                "internal_contacts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  }
                },
                "note_service": {
                  "type": "string"
                },
                "note_department": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "api_key_applications": []
          }
        ]
      }
    },
    "/api/public/users/reference_data": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users reference data",
        "description": "Get reference data to create a user. Containing all valid values for roles and user groups.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:provisioning-users**",
        "operationId": "PublicAPI-getUsersReference",
        "deprecated": false,
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "typologyId": {
                        "type": "string"
                      },
                      "typologyFolderId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                },
                "user_groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "typologyId": {
                              "type": "string"
                            },
                            "typologyFolderId": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "roles"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/public/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List Users",
        "description": "Retrieves a list of users. Result can be filtered by id (provisioning_id), first name, last name, username, linkedIn url, default language, email address, localisation, phone number, job position and business unit. Number of results returned can be handled by limit and offset parameters.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:provisioning-users**",
        "operationId": "PublicAPI-searchUsers",
        "deprecated": false,
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "provisionning_id",
            "in": "query",
            "description": "[optional] Provisioning id filter",
            "x-ms-summary": "provisionning_id",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "query",
            "description": "[optional] User id filter",
            "x-ms-summary": "id",
            "type": "string",
            "required": false
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "[optional] Fist name filter",
            "x-ms-summary": "firstName",
            "type": "string",
            "required": false
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "[optional] Last name filter",
            "x-ms-summary": "lastName",
            "type": "string",
            "required": false
          },
          {
            "name": "username",
            "in": "query",
            "description": "[optional] Username filter",
            "x-ms-summary": "username",
            "type": "string",
            "required": false
          },
          {
            "name": "linkedin",
            "in": "query",
            "description": "[optional] LinkedIn filter",
            "x-ms-summary": "linkedin",
            "type": "string",
            "required": false
          },
          {
            "name": "job",
            "in": "query",
            "description": "[optional] Job position filter",
            "x-ms-summary": "job",
            "type": "string",
            "required": false
          },
          {
            "name": "localisation",
            "in": "query",
            "description": "[optional] Localisation filter",
            "x-ms-summary": "localisation",
            "type": "string",
            "required": false
          },
          {
            "name": "phone",
            "in": "query",
            "description": "[optional] Phone number filter",
            "x-ms-summary": "phone",
            "type": "string",
            "required": false
          },
          {
            "name": "business_unit",
            "in": "query",
            "description": "[optional] Business unit filter",
            "x-ms-summary": "business_unit",
            "type": "string",
            "required": false
          },
          {
            "name": "default_language",
            "in": "query",
            "description": "[optional] Default language filter",
            "x-ms-summary": "default_language",
            "type": "string",
            "required": false
          },
          {
            "name": "email",
            "in": "query",
            "description": "[optional] Email filter",
            "x-ms-summary": "email",
            "type": "string",
            "required": false
          },
          {
            "name": "role",
            "in": "query",
            "description": "[optional] The role name to match",
            "x-ms-summary": "role",
            "type": "string",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "[optional] The number of items to retrieve. (maximum limit 1000)",
            "x-ms-summary": "Limit",
            "required": false,
            "default": 20,
            "maximum": 1000,
            "type": "number"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "[optional] The offset of the first hit to return",
            "x-ms-summary": "Offset",
            "required": false,
            "default": 0,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "linkedin": {
                    "type": "string"
                  },
                  "job": {
                    "type": "string"
                  },
                  "localisation": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "business_unit": {
                    "type": "string"
                  },
                  "default_language": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "typologyId": {
                          "type": "string"
                        },
                        "typologyFolderId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "typologyId": {
                                "type": "string"
                              },
                              "typologyFolderId": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "roles"
                      ]
                    }
                  },
                  "suspended": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "summary": "Create User",
        "description": "Create a User.\n Note: You can add a provisioning_id field to the object input containing a custom user id, other request with a user id parameter work with either the bloomflow id or your custom id.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:provisioning-users**",
        "operationId": "PublicAPI-addUser",
        "deprecated": false,
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "provisionning_id": {
                  "type": "string",
                  "description": "provisionning_id"
                },
                "firstName": {
                  "type": "string",
                  "description": "firstName"
                },
                "lastName": {
                  "type": "string",
                  "description": "lastName"
                },
                "linkedin": {
                  "type": "string",
                  "description": "linkedin"
                },
                "job": {
                  "type": "string",
                  "description": "job"
                },
                "localisation": {
                  "type": "string",
                  "description": "localisation"
                },
                "phone": {
                  "type": "string",
                  "description": "phone"
                },
                "business_unit": {
                  "type": "string",
                  "description": "business_unit"
                },
                "default_language": {
                  "type": "string",
                  "description": "default_language"
                },
                "email": {
                  "type": "string",
                  "description": "email"
                },
                "role": {
                  "type": "string",
                  "description": "role"
                },
                "suspended": {
                  "type": "boolean",
                  "description": "suspended"
                }
              },
              "default": {
                "provisionning_id": "external-1",
                "firstName": "Ted",
                "lastName": "Hoover",
                "linkedin": "https://www.linkedin.com/in/ted-hoover/",
                "job": "Data Scientist Team Leader",
                "localisation": "Paris",
                "phone": "+1-202-555-0130",
                "business_unit": "Research",
                "default_language": "EN",
                "email": "ted.hoover@allicata.com",
                "role": "admin",
                "suspended": true
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "provisionning_id": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "linkedin": {
                  "type": "string"
                },
                "job": {
                  "type": "string"
                },
                "localisation": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "business_unit": {
                  "type": "string"
                },
                "default_language": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                },
                "groups": {
                  "type": "array",
                  "items": {}
                },
                "suspended": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "Retrieve a specific user by ID.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:provisioning-users**",
        "operationId": "PublicAPI-getUser",
        "deprecated": false,
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "id",
            "default": "62d943ee03b2e60013022971",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Id of the object",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "provisionning_id": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "linkedin": {
                  "type": "string"
                },
                "job": {
                  "type": "string"
                },
                "localisation": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "business_unit": {
                  "type": "string"
                },
                "default_language": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                },
                "groups": {
                  "type": "array",
                  "items": {}
                },
                "suspended": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "summary": "Update User",
        "description": "Endpoint to update fields of a user (can be used to suspend a user).\nNote :\nYou can provide how many fields you need\nMissing field won't be updated\n\n###Suspend a user\nTo suspend a user you need to provide input with an object containing the field suspended with the value true\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:provisioning-users**",
        "operationId": "PublicAPI-updateUser",
        "deprecated": false,
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "id",
            "default": "62d943ee03b2e60013022971",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Id of the object",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "provisionning_id": {
                  "type": "string",
                  "description": "provisionning_id"
                },
                "firstName": {
                  "type": "string",
                  "description": "firstName"
                },
                "lastName": {
                  "type": "string",
                  "description": "lastName"
                },
                "linkedin": {
                  "type": "string",
                  "description": "linkedin"
                },
                "job": {
                  "type": "string",
                  "description": "job"
                },
                "localisation": {
                  "type": "string",
                  "description": "localisation"
                },
                "phone": {
                  "type": "string",
                  "description": "phone"
                },
                "business_unit": {
                  "type": "string",
                  "description": "business_unit"
                },
                "default_language": {
                  "type": "string",
                  "description": "default_language"
                },
                "email": {
                  "type": "string",
                  "description": "email"
                },
                "role": {
                  "type": "string",
                  "description": "role"
                },
                "suspended": {
                  "type": "boolean",
                  "description": "suspended"
                }
              },
              "default": {
                "provisionning_id": "external-1",
                "firstName": "Ted",
                "lastName": "Hoover",
                "linkedin": "https://www.linkedin.com/in/ted-hoover/",
                "job": "Data Scientist Team Leader",
                "localisation": "Paris",
                "phone": "+1-202-555-0130",
                "business_unit": "Research",
                "default_language": "EN",
                "email": "ted.hoover@allicata.com",
                "role": "admin",
                "suspended": true
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "provisionning_id": {
                  "type": "string"
                },
                "id": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "linkedin": {
                  "type": "string"
                },
                "job": {
                  "type": "string"
                },
                "localisation": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "business_unit": {
                  "type": "string"
                },
                "default_language": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                },
                "groups": {
                  "type": "array",
                  "items": {}
                },
                "suspended": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/webhooks/reference_data": {},
    "/api/public/webhooks": {
      "x-ms-notification-content": {
        "schema": {
          "type": "object",
          "properties": {
            "meta": {
              "type": "object",
              "properties": {
                "object": {
                  "type": "string",
                  "description": "object"
                },
                "objectId": {
                  "type": "string",
                  "description": "objectId"
                },
                "action": {
                  "type": "string",
                  "description": "action"
                },
                "createdAt": {
                  "type": "string",
                  "description": "createdAt"
                },
                "retry": {
                  "type": "integer",
                  "format": "int32",
                  "description": "retry"
                }
              },
              "description": "meta"
            }
          }
        }
      },
      "get": {
        "summary": "List Webhook subscriptions",
        "description": "Retrieve a list of webhook  object.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:webhooks**\n    ",
        "operationId": "PublicAPI-getWebhooksItems",
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      },
      "post": {
        "x-ms-trigger": "single",
        "summary": "Create Webhook subscription",
        "consumes": [
          "application/json"
        ],
        "description": "Create a Webhook subscription object.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:webhooks**\n    ",
        "operationId": "PublicAPI-addWebhooksItem",
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "events": {
                  "type": "string",
                  "description": "event",
                  "x-ms-dynamic-values": {
                    "operationId": "PublicAPI-WebhooksPowerAutomateGetReferenceDataEvents",
                    "value-path": "id",
                    "value-title": "label",
                    "parameters": {
                      "bloomflow_api_url": {
                        "parameter": "bloomflow_api_url"
                      }
                    }
                  }
                },
                "webhookUrl": {
                  "type": "string",
                  "description": "webhookUrl",
                  "x-ms-notification-url": true,
                  "x-ms-visibility": "internal",
                  "title": ""
                },
                "enabled": {
                  "type": "boolean",
                  "description": "enabled",
                  "title": "",
                  "enum": [
                    true,
                    false
                  ],
                  "x-ms-visibility": "internal",
                  "default": true
                },
                "securityConfig": {
                  "type": "object",
                  "properties": {
                    "headerKey": {
                      "type": "string",
                      "description": "headerKey",
                      "title": "",
                      "x-ms-visibility": "internal"
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "apiKey",
                      "title": "",
                      "x-ms-visibility": "internal"
                    }
                  },
                  "description": "securityConfig"
                }
              },
              "default": {
                "events": [
                  "item.created",
                  "project[id=”123456”].step[name=”poc”].reached"
                ],
                "webhookUrl": "https://api.bikini-bottom.bloomflow.com/api/public/",
                "enabled": true,
                "securityConfig": {
                  "headerKey": "x-bflow-api-key"
                }
              },
              "required": [
                "webhookUrl",
                "enabled"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "events": {
                  "type": "string"
                },
                "webhookUrl": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/public/webhooks/{id}": {
      "get": {
        "summary": "Get Webhook subscription",
        "description": "Retrieve a specific Webhook subscription object.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:webhooks**\n    ",
        "operationId": "PublicAPI-getWebhooksItem",
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "id",
            "default": "635a707a22dec40013284294",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Id of the object",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "webhookUrl": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "created_by": {
                  "type": "string"
                },
                "updated_by": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      },
      "delete": {
        "summary": "Delete Webhook subscription",
        "description": "Delete a Webhook subscription object.\n\n### Scope\nTo use this endpoint ApiKey object must have this scope:\n**public:webhooks**\n    ",
        "operationId": "PublicAPI-deleteWebhooksItem",
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          },
          {
            "name": "id",
            "default": "635a707a22dec40013284294",
            "x-ms-summary": "Id",
            "x-ms-url-encoding": "single",
            "description": "Id of the object",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successful",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "number"
                }
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    },
    "/api/public/webhooks/power-automate/reference_data/events": {
      "get": {
        "summary": "PA Get Reference data",
        "description": "Get Reference data for PA",
        "operationId": "PublicAPI-WebhooksPowerAutomateGetReferenceDataEvents",
        "parameters": [
          {
            "$ref": "#/parameters/bloomflow_api_url_parameter"
          }
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-ms-visibility": "internal"
      }
    }
  },
  "definitions": {},
  "parameters": {
    "bloomflow_api_url_parameter": {
      "in": "header",
      "name": "bloomflow_api_url",
      "type": "string",
      "description": "bloomflow public api url",
      "default": "https://api.demo.bloomflow.com",
      "required": true,
      "x-ms-summary": "bloomflow public api url"
    }
  },
  "responses": {},
  "securityDefinitions": {
    "API Key": {
      "type": "apiKey",
      "in": "header",
      "name": "x-bflow-api-key"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.bloomflow.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.bloomflow.com/legal/privacy-policy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Productivity;Sales and CRM"
    }
  ]
}